---
title: "Lab 3: Depth-Damage Models"
subtitle: "DataFrames and Distributions"
author: "Wanqi Yuan"
date: 2024-01-26
week: 3
categories: [Lab]

# code to use
jupyter: julia-1.10

format: 
    html:
        theme: spacelab
        copy-code: true
        code-overflow: wrap
        toc: true
        anchor-sections: true
        callout-appearance: simple
        reference-location: document
        citations-hover: true
        code-annotations: hover
        code-line-numbers: true
        html-math-method: katex

    # YOU CAN DO PDF OR DOCX BUT NOT BOTH
    # IF YOU UNCOMMENT docx, COMMENT OR DELETE pdf
    pdf:
        documentclass: article
        fontsize: 11pt
        geometry:
            - margin=1in  
        number-sections: true
        code-line-numbers: true

    #docx: 
    #    toc: true
    #    fig-format: png
    #    number-sections: true
    #    code-line-numbers: true

date-format: "ddd., MMM. D"
---


```{julia}
using CSV
using DataFrames
using DataFramesMeta
using Distributions
using Interpolations
using Plots
using StatsPlots
using Unitful

Plots.default(; margin=6Plots.mm)
```

# Site information
Location : 29°18'33"N 94°47'34"W

Elevation (From Google Earth): 1.17m 

# Depth-Damage


Code below gets Depth Damage Function
```{julia}
# Grabbing Depth Damage 
haz_fl_dept = CSV.read("data/haz_fl_dept.csv", DataFrame)
include("depthdamage.jl")
```
```{julia}
data_row = @rsubset(
    haz_fl_dept, :Description == "two story, no basement, Contents", :Source == "USACE - Galveston"
)[
    1, :,
]
dd = DepthDamageData(data_row)

fieldnames(typeof(dd))
```

```{julia}
scatter(
    dd.depths,
    dd.damages;
    xlabel="Flood Depth at House",
    ylabel="Damage (%)",
    label="$(dd.description) ($(dd.source))",
    legend=:bottomright,
    size=(700, 500),
)

```

```{julia}
function get_depth_damage_function(
    depth_train::Vector{<:T}, dmg_train::Vector{<:AbstractFloat}
) where {T<:Unitful.Length}

    # interpolate
    depth_ft = ustrip.(u"ft", depth_train)
    interp_fn = Interpolations.LinearInterpolation(
        depth_ft,
        dmg_train;
        extrapolation_bc=Interpolations.Flat(),
    )

    damage_fn = function (depth::T2) where {T2<:Unitful.Length}
        return interp_fn(ustrip.(u"ft", depth))
    end
    return damage_fn
end

damage_fn = get_depth_damage_function(dd.depths, dd.damages)
```
```{julia}
p = let
    depths = uconvert.(u"ft", (-7.0u"ft"):(1.0u"inch"):(30.0u"ft"))
    damages = damage_fn.(depths)
    scatter(
        depths,
        damages;
        xlabel="Flood Depth",
        ylabel="Damage (%)",
        label="$(dd.description) ($(dd.source))",
        legend=:bottomright,
        size=(800, 400),
        linewidth=2,
    )
end
p
```
# Expected annual damages
```{julia}
gauge_dist = GeneralizedExtremeValue(5, 1.5, 0.1)

# adjust for elevation
offset = 3.84 # house is 3.84 feet above gauge
house_dist = GeneralizedExtremeValue(gauge_dist.μ - offset, gauge_dist.σ, gauge_dist.ξ)

# get 1 million samples
n_samps = rand(house_dist, 1000000)
n_samps *=1u"ft"
# samps_ft = ustrip.(u"ft", n_samps)
typeof(n_samps)
# Apply Depth Damage Fn to all samples


damages = damage_fn.(n_samps)

avg_dmg = mean(damages)

print(avg_dmg)
```
# Discussion
Chosen Depth-Damage Fn: Galveston,"two story, no basement,"

This is appropriate because the selected site
has the listed characteristics and is in 
Galveston. 

Average Damage:
The Average damage being 29.9% means that this property is projected to receive 29.9% 
damage in any given year with the given pdf for hazard (water level). 